
import it.univr.scacchi.Casella;
import it.univr.scacchi.CasellaVuota;
import it.univr.scacchi.Pedina;

import javax.swing.JFrame;


public class GameBoard extends JFrame {
	/**
	 * Il numero di caselle per ogni riga.
	 */

	public final static int NUMERO_CASELLE = 100;
	
	private final Casella[][] caselle = {
			{ new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this) },
			{ new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this) },
			{ new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this) },
			{ new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this), new CasellaVuota(this) },
		};

	
	/**
	 * Crea e disegna la GameBoard.
	 */

	public GameBoard() {
		super("MY GAME OF LIFE !");

		quitIfClose();
		doNotUseLayoutManager();
		fixSize();
		paintAllCaselle();
	}
	
	private void quitIfClose() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

	private void doNotUseLayoutManager() {
		getContentPane().setLayout(null);
	}

	private void fixSize() {
		getContentPane().setBounds(40, 40,
			Casella.DIMENSIONE * NUMERO_CASELLE,
			Casella.DIMENSIONE * NUMERO_CASELLE);
		setSize(Casella.DIMENSIONE * NUMERO_CASELLE + 10,
				Casella.DIMENSIONE * NUMERO_CASELLE + 10);
		setResizable(true);
	}

	private void paintAllCaselle() {
		int riga = 0;
		for (Casella[] rigaDiPedine: caselle) {
			int colonna = 0;
			for (Casella casella: rigaDiPedine)
				position(casella, riga, colonna++);
			riga++;
		}
	}

	public void position(Casella casella, int riga, int colonna) {
		getContentPane().remove(caselle[riga][colonna]);
		getContentPane().add(casella);
		caselle[riga][colonna] = casella;
		casella.spostaIn(riga, colonna);
	}
	/**
	 * Un semplice main di prova.
	 *
	 * @param args argomenti da linea di comando (non usati)
	 */

	public static void main(String[] args) {
		new GameBoard().setVisible(true);
	}
	

	/**
	 * Prende nota che &egrave; stato cliccata la casella indicata.
	 *
	 * @param casella la casella che &egrave; stata cliccata
	 */

	protected void hannoCliccato(Casella casella) {
		if (ultimaPedinaCliccata != null && ultimaPedinaCliccata.puoSpostarsiSu(casella)) {
			posiziona(new CasellaVuota(this),
				ultimaPedinaCliccata.getRiga(), ultimaPedinaCliccata.getColonna());
			posiziona(ultimaPedinaCliccata, casella.getRiga(), casella.getColonna());
			ultimaPedinaCliccata = null;

			// dobbiamo ridisegnare la finestra
			repaint();
		}
		else if (casella instanceof Pedina)
			ultimaPedinaCliccata = (Pedina) casella;
		else
			ultimaPedinaCliccata = null;
	}
	
	/**
	 * Restituisce la casella alle seguenti coordinate.
	 *
	 * @param riga la riga
	 * @param colonna la colonna
	 * @return la casella a tali coordinate
	 */

	protected Casella getCasella(int riga, int colonna) {
		return caselle[riga][colonna];
	}
	
}//end